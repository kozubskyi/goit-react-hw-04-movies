{"version":3,"sources":["services/services.js","Components/CastList/CastList.js","Components/ReviewsList/ReviewsList.js","Pages/MovieDetailsPage/MovieDetailsPage.js"],"names":["basicUrl","apiKey","getTrendMovies","axios","get","then","response","data","results","getSeacrhedMovies","query","getMovie","movieId","getMovieCast","cast","getMovieReviews","CastList","match","useState","setCast","useEffect","params","className","map","actor","src","profile_path","alt","name","width","height","character","id","defaultProps","ReviewsList","reviews","setReviews","length","review","author","content","defaulrProps","MovieDetailsPage","history","location","title","setTitle","description","setDescription","score","setScore","genres","setGenres","image","setImage","movie","original_name","overview","vote_average","poster_path","backdrop_path","type","onClick","push","state","from","routes","home","genre","to","url","path","component"],"mappings":"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","file":"static/js/movie-details-page.d72eca5b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst basicUrl = 'https://api.themoviedb.org/3/';\r\nconst apiKey = '6da14ee54f4b325908f75ac46dfb1018';\r\n\r\nconst getTrendMovies = () => {\r\n  return axios.get(`${basicUrl}trending/movie/day?api_key=${apiKey}`).then(response => response.data.results);\r\n};\r\n\r\nconst getSeacrhedMovies = query => {\r\n  return axios.get(`${basicUrl}search/movie?query=${query}&api_key=${apiKey}`).then(response => response.data.results);\r\n};\r\n\r\nconst getMovie = movieId => {\r\n  return axios.get(`${basicUrl}movie/${movieId}?api_key=${apiKey}`).then(response => response.data);\r\n};\r\n\r\nconst getMovieCast = movieId => {\r\n  return axios.get(`${basicUrl}movie/${movieId}/credits?api_key=${apiKey}`).then(response => response.data.cast);\r\n};\r\n\r\nconst getMovieReviews = movieId => {\r\n  return axios.get(`${basicUrl}movie/${movieId}/reviews?api_key=${apiKey}`).then(response => response.data.results);\r\n};\r\n\r\nexport { getTrendMovies, getSeacrhedMovies, getMovie, getMovieCast, getMovieReviews };\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CastList.scss';\r\nimport { getMovieCast } from '../../services/services';\r\n\r\nconst CastList = ({ match }) => {\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovieCast(match.params.movieId).then(cast => {\r\n      // console.log('cast', cast);\r\n      setCast(cast);\r\n    });\r\n  }, [match]);\r\n\r\n  return (\r\n    <ul className=\"CastList\">\r\n      {cast.map(actor => {\r\n        return (\r\n          <li className=\"actor-card\" key={actor.id}>\r\n            <img\r\n              className=\"actor-photo\"\r\n              src={actor.profile_path && `https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n              alt={actor.name}\r\n              width=\"150\"\r\n              height=\"225\"\r\n            />\r\n            <div className=\"actor-info\">\r\n              <h3 className=\"actor-name\">{actor.name}</h3>\r\n              <p className=\"actor-character\">Character: {actor.character}</p>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nCastList.defaultProps = {\r\n  cast: [],\r\n};\r\n\r\nCastList.propTypes = {\r\n  cast: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      profile_path: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      character: PropTypes.string,\r\n    }).isRequired,\r\n  ),\r\n\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      movieId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default CastList;\r\n","import { useState, useEffect } from 'react';\r\nimport { getMovieReviews } from '../../services/services';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ReviewsList = ({ match }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(match.params.movieId).then(reviews => {\r\n      // console.log('reviews', reviews);\r\n      setReviews(reviews);\r\n    });\r\n  }, [match]);\r\n\r\n  return reviews.length === 0 ? (\r\n    <p className=\"no-reviews-text\">We don't have any reviews for this movie.</p>\r\n  ) : (\r\n    <ul className=\"ReviewsList\">\r\n      {reviews.map(review => {\r\n        return (\r\n          <li key={review.id}>\r\n            <h3 className=\"review-author\">{review.author}</h3>\r\n            <p className=\"review-text\">{review.content}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nReviewsList.defaulrProps = {\r\n  reviews: [],\r\n};\r\n\r\nReviewsList.propTypes = {\r\n  reviews: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      movieId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ReviewsList;\r\n","import { useState, useEffect } from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieDetailsPage.scss';\r\nimport { getMovie } from '../../services/services';\r\nimport routes from '../../routes';\r\nimport CastList from '../../Components/CastList/CastList';\r\nimport ReviewsList from '../../Components/ReviewsList/ReviewsList';\r\n\r\n//* MovieDetailsPage Hook\r\nconst MovieDetailsPage = ({ match, history, location }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [score, setScore] = useState('');\r\n  const [genres, setGenres] = useState([]);\r\n  const [image, setImage] = useState('');\r\n\r\n  useEffect(() => {\r\n    getMovie(match.params.movieId).then(movie => {\r\n      // console.log('movie', movie);\r\n      const { title, original_name, overview, vote_average, genres, poster_path, backdrop_path } = movie;\r\n      setTitle(title || original_name);\r\n      setDescription(overview);\r\n      setScore(vote_average);\r\n      setGenres(genres);\r\n      setImage(`https://image.tmdb.org/t/p/w500${poster_path || backdrop_path}`);\r\n    });\r\n  }, [match]);\r\n\r\n  const handleBackButtonClick = () => history.push(location?.state?.from || routes.home);\r\n\r\n  return (\r\n    <div className=\"MovieDetailsPage\">\r\n      <button type=\"button\" className=\"back-btn\" onClick={handleBackButtonClick}>\r\n        Back\r\n      </button>\r\n      <div className=\"main-info\">\r\n        <div className=\"image\">\r\n          <img src={image} alt={`Poster of ${title}`} width=\"320\" />\r\n        </div>\r\n        <div className=\"description\">\r\n          <h1>{title}</h1>\r\n          <p>User score: {score * 10}%</p>\r\n          <h2>Overview</h2>\r\n          <p>{description}</p>\r\n          <h2>Genres</h2>\r\n          <ul className=\"genres-list\">\r\n            {genres.map(genre => {\r\n              return (\r\n                <li className=\"genres-item\" key={genre.id}>\r\n                  {genre.name}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"additional-info\">\r\n        <h2 className=\"additional-info__title\">Additional information</h2>\r\n        <ul className=\"additional-info__list\">\r\n          <li className=\"additional-info__item\">\r\n            <NavLink to={`${match.url}/cast`}>Cast</NavLink>\r\n          </li>\r\n          <li className=\"additional-info__item\">\r\n            <NavLink to={`${match.url}/reviews`}>Reviews</NavLink>\r\n          </li>\r\n        </ul>\r\n        <Route path={`${match.path}/cast`} component={CastList} />\r\n        <Route path={`${match.path}/reviews`} component={ReviewsList} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieDetailsPage.defaultProps = {\r\n  title: '',\r\n  description: '',\r\n  score: '',\r\n  genres: [],\r\n  image: '',\r\n};\r\n\r\nMovieDetailsPage.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  score: PropTypes.string,\r\n  genres: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n    }),\r\n  ),\r\n  image: PropTypes.string,\r\n\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      movieId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    path: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  history: PropTypes.shape().isRequired,\r\n  location: PropTypes.shape({\r\n    state: PropTypes.shape({\r\n      from: PropTypes.shape({\r\n        pathname: PropTypes.string,\r\n      }),\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}