{"version":3,"sources":["services/services.js","Components/MoviesList/MoviesList.js","Pages/MoviesPage/MoviesPage.js"],"names":["basicUrl","apiKey","getTrendMovies","axios","get","then","response","data","results","getSeacrhedMovies","query","getMovie","movieId","getMovieCast","cast","getMovieReviews","withRouter","movies","location","className","map","movie","to","pathname","routes","id","state","from","title","original_name","MoviesPage","history","useState","setQuery","setMovies","useEffect","search","substr","onSubmit","event","preventDefault","push","type","autoFocus","onChange","target","value","defaultProps"],"mappings":"yIAAA,+LAEMA,EAAW,gCACXC,EAAS,mCAETC,EAAiB,WACrB,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,sCAAmDC,IAAUI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAG/FC,EAAoB,SAAAC,GACxB,OAAOP,IAAMC,IAAN,UAAaJ,EAAb,8BAA2CU,EAA3C,oBAA4DT,IAAUI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAGxGG,EAAW,SAAAC,GACf,OAAOT,IAAMC,IAAN,UAAaJ,EAAb,iBAA8BY,EAA9B,oBAAiDX,IAAUI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGxFM,EAAe,SAAAD,GACnB,OAAOT,IAAMC,IAAN,UAAaJ,EAAb,iBAA8BY,EAA9B,4BAAyDX,IAAUI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKO,SAGrGC,EAAkB,SAAAH,GACtB,OAAOT,IAAMC,IAAN,UAAaJ,EAAb,iBAA8BY,EAA9B,4BAAyDX,IAAUI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,a,gCCtB3G,wCAsCeQ,iBAjCI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC5B,OACE,oBAAIC,UAAU,eAAd,SACGF,EAAOG,KAAI,SAAAC,GACV,OACE,oBAAIF,UAAU,eAAd,SACE,cAAC,IAAD,CACEG,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAOP,OAAZ,YAAsBI,EAAMI,IACpCC,MAAO,CAAEC,KAAMT,IAHnB,SAMGG,EAAMO,OAASP,EAAMQ,iBAPQR,EAAMI,a,mICJ5CK,EAAa,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASb,EAAe,EAAfA,SAAe,EAClBc,mBAAS,IADS,mBACrCtB,EADqC,KAC9BuB,EAD8B,OAEhBD,mBAAS,IAFO,mBAErCf,EAFqC,KAE7BiB,EAF6B,KAK5CC,qBAAU,WACRjB,EAASkB,QACP3B,YAAkBS,EAASkB,OAAOC,OAAO,IAAIhC,MAAK,SAAAY,GAEhDiB,EAAUjB,QAEb,CAACC,IAeJ,OACE,qCACE,uBAAMC,UAAU,mBAAmBmB,SAbd,SAAAC,GACvBA,EAAMC,iBACF9B,IACFD,YAAkBC,GAAOL,MAAK,SAAAY,GAE5BiB,EAAUjB,MAEZc,EAAQU,KAAK,CAAEL,OAAO,SAAD,OAAW1B,OAMhC,UACE,uBAAOgC,KAAK,SAASC,WAAS,EAACC,SAhBZ,SAAAL,GAAK,OAAIN,EAASM,EAAMM,OAAOC,UAiBlD,wBAAQJ,KAAK,SAAb,uBAEF,cAAC,IAAD,CAAYzB,OAAQA,QAK1Ba,EAAWiB,aAAe,CACxBrC,MAAO,GACPO,OAAQ,IAYKa","file":"static/js/movies-page.cec1fcd2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst basicUrl = 'https://api.themoviedb.org/3/';\r\nconst apiKey = '6da14ee54f4b325908f75ac46dfb1018';\r\n\r\nconst getTrendMovies = () => {\r\n  return axios.get(`${basicUrl}trending/movie/day?api_key=${apiKey}`).then(response => response.data.results);\r\n};\r\n\r\nconst getSeacrhedMovies = query => {\r\n  return axios.get(`${basicUrl}search/movie?query=${query}&api_key=${apiKey}`).then(response => response.data.results);\r\n};\r\n\r\nconst getMovie = movieId => {\r\n  return axios.get(`${basicUrl}movie/${movieId}?api_key=${apiKey}`).then(response => response.data);\r\n};\r\n\r\nconst getMovieCast = movieId => {\r\n  return axios.get(`${basicUrl}movie/${movieId}/credits?api_key=${apiKey}`).then(response => response.data.cast);\r\n};\r\n\r\nconst getMovieReviews = movieId => {\r\n  return axios.get(`${basicUrl}movie/${movieId}/reviews?api_key=${apiKey}`).then(response => response.data.results);\r\n};\r\n\r\nexport { getTrendMovies, getSeacrhedMovies, getMovie, getMovieCast, getMovieReviews };\r\n","import { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MoviesList.scss';\r\nimport routes from '../../routes';\r\n\r\nconst MoviesList = ({ movies, location }) => {\r\n  return (\r\n    <ul className=\"movies__list\">\r\n      {movies.map(movie => {\r\n        return (\r\n          <li className=\"movies__item\" key={movie.id}>\r\n            <Link\r\n              to={{\r\n                pathname: `${routes.movies}/${movie.id}`,\r\n                state: { from: location },\r\n              }}\r\n            >\r\n              {movie.title || movie.original_name}\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string,\r\n      original_name: PropTypes.string,\r\n    }).isRequired,\r\n  ).isRequired,\r\n\r\n  location: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MoviesPage.scss';\r\nimport { getSeacrhedMovies } from '../../services/services';\r\nimport MoviesList from '../../Components/MoviesList/MoviesList';\r\n\r\nconst MoviesPage = ({ history, location }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  //* componentDidMount\r\n  useEffect(() => {\r\n    location.search &&\r\n      getSeacrhedMovies(location.search.substr(7)).then(movies => {\r\n        // console.log('movies', movies);\r\n        setMovies(movies);\r\n      });\r\n  }, [location]);\r\n\r\n  const handleInputValue = event => setQuery(event.target.value);\r\n\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (query) {\r\n      getSeacrhedMovies(query).then(movies => {\r\n        // console.log('movies', movies);\r\n        setMovies(movies);\r\n      });\r\n      history.push({ search: `query=${query}` });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"MoviesPage__form\" onSubmit={handleFormSubmit}>\r\n        <input type=\"search\" autoFocus onChange={handleInputValue} />\r\n        <button type=\"submit\">Seacrh</button>\r\n      </form>\r\n      <MoviesList movies={movies} />\r\n    </>\r\n  );\r\n};\r\n\r\nMoviesPage.defaultProps = {\r\n  query: '',\r\n  movies: [],\r\n};\r\n\r\nMoviesPage.propTypes = {\r\n  query: PropTypes.string,\r\n  movies: PropTypes.arrayOf(PropTypes.shape().isRequired),\r\n\r\n  match: PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}